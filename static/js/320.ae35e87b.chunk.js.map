{"version":3,"file":"static/js/320.ae35e87b.chunk.js","mappings":"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","sources":["refs/refs.js","components/api/api.js","components/ActorsList/ActorItem/StyledActorItem.js","components/ActorsList/ActorItem/ActorItem.jsx","components/ActorsList/StyledActorsList.js","components/ActorsList/ActorsList.jsx","pages/Cast.jsx"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c23a5d8272617f6f7021ba4c498464ff';\n","import axios from 'axios'; //npm install axios\n\nimport { BASE_URL, API_KEY } from 'refs/refs';\n\nexport const getTrendingFilm = async () => {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getFilmById = async movieId => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = resp.data;\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getReviewMovie = async movieID => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`\n  );\n  const data = resp.data;\n  return data;\n};\n\nexport const getCastMovie = async movieID => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`\n  );\n  const data = resp.data;\n  return data;\n};\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledActorItem = styled.li`\n  padding: 10px;\n  width: 120px;\n  min-width: 120px;\n  /* height: 220x; */\n\n  color: black;\n\n  margin: 10px 4px 10px 10px;\n\n  /* border: 1px solid grey; */\n  padding-bottom: 10px;\n  border-radius: 10px;\n\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n\n  .text,\n  .actorsName {\n    display: block;\n    white-space: wrap;\n  }\n\n  .text {\n    font-size: 16px;\n  }\n\n  .actorsName {\n    font-size: 14px;\n  }\n\n  .imgActor {\n    border-radius: 10px;\n  }\n`;\n","import React from 'react';\nimport { StyledActorItem } from 'components/ActorsList/ActorItem/StyledActorItem';\n\nconst ActorItem = ({ id, profile_path, name, character }) => {\n  const imageUrl = profile_path\n    ? `https://www.themoviedb.org/t/p/w240_and_h266_face${profile_path}`\n    : 'https://lmm.in.ua/image/cache/catalog/image/cache/catalog/3/7/9/3796/1-650x650.webp'; //заглушка\n  console.log(imageUrl);\n\n  return (\n    <StyledActorItem className=\"actorItem\">\n      <img src={imageUrl} alt={name} width=\"264\" className=\"imgActor\" />\n      <h3 className=\"actorsName\"> {name}</h3>\n      <p className=\"text\"> {character}</p>\n    </StyledActorItem>\n  );\n};\n\nexport default ActorItem;\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledActorsList = styled.ul`\n  list-style: none;\n  width: 100%;\n  display: flex;\n  overflow-y: hidden;\n  overflow-x: scroll;\n  white-space: nowrap;\n  box-sizing: border-box;\n  padding: 15px 0; /* 15px сверху и снизу, 0 слева и справа */\n  gap: 10px;\n\n  background-image: url(https://www.themoviedb.org/assets/2/v4/misc/trending-bg-39afc2a5f77e31d469b25c187814c0a2efef225494c038098d62317d923f8415.svg);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-color: white;\n  background-position: left;\n`;\n","import React from 'react';\nimport ActorItem from 'components/ActorsList/ActorItem/ActorItem';\nimport { StyledActorsList } from 'components/ActorsList/StyledActorsList';\n\nconst ActorsList = ({ actors }) => {\n  return (\n    <StyledActorsList className=\"actorsList\">\n      {actors.map(actor => (\n        <ActorItem\n          key={actor.id}\n          profile_path={actor.profile_path}\n          name={actor.name}\n          character={actor.character}\n        ></ActorItem>\n      ))}\n    </StyledActorsList>\n  );\n};\n\nexport default ActorsList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ActorsList from 'components/ActorsList/ActorsList';\nimport Loader from 'components/Loader/Loader'; //npm install react-loader-spinner --save\nimport { getCastMovie } from 'components/api/api.js';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  // Состояние для отслеживания состояния загрузки\n  const [isLoading, setIsLoading] = useState(false);\n  // Состояние для обработки ошибок\n  const [error, setError] = useState(null);\n  const [actorsDetails, setActorsDetails] = useState(null);\n\n  const fetchActors = async id => {\n    try {\n      // Установить флаг загрузки в true перед запросом\n      setIsLoading(true);\n      // Сбросить состояние ошибки перед запросом\n      setError(null);\n      // Запрос к API для получения детальной информации о фильме по его ID\n      const data = await getCastMovie(id);\n      // Установка детальной информации о фильме в состояние\n      setActorsDetails(data);\n      console.log('actorsDetails.cast:', data.cast); // Добавляем вывод в консоль\n      // Сбросить состояние ошибки\n      setError(null);\n    } catch (error) {\n      // Установка состояния ошибки в случае ошибки\n      setError(error.message);\n      // Сбросить состояние деталей фильма в случае ошибки\n      setActorsDetails(null);\n    } finally {\n      // Установка флага загрузки в false в любом случае после завершения запроса, независимо от его успешности\n      setIsLoading(false);\n    }\n  };\n  // useEffect для выполнения запроса, когда компонент монтируется или изменяется movieId\n  useEffect(() => {\n    // Вызов функции fetchChosenMovie при изменении movieId\n    fetchActors(movieId);\n  }, [movieId]);\n\n  // Извлечение массива актеров и преобразование его в массив имен\n  return (\n    <div>\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... Error message: {error}\n        </p>\n      )}\n      {isLoading && <Loader />}\n      <h2> Cast </h2> {/* Cast = актерский состав */}\n      {actorsDetails !== null && <ActorsList actors={actorsDetails.cast} />}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","getTrendingFilm","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","data","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","getFilmById","_ref2","_callee2","movieId","_context2","t0","_x","getSearchMovie","_ref3","_callee3","searchQuery","_context3","_x2","getReviewMovie","_ref4","_callee4","movieID","_context4","_x3","getCastMovie","_ref5","_callee5","_context5","_x4","StyledActorItem","styled","_templateObject","_taggedTemplateLiteral","id","profile_path","name","character","imageUrl","console","log","_jsxs","className","children","_jsx","src","alt","width","StyledActorsList","actors","map","actor","ActorItem","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","actorsDetails","setActorsDetails","fetchActors","cast","message","finish","useEffect","Loader","ActorsList"],"sourceRoot":""}