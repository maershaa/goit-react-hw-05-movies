{"version":3,"file":"static/js/455.a60b8953.chunk.js","mappings":"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","sources":["components/GoBackBtn/StyledGoBackBtn.js","components/GoBackBtn/GoBackBtn.jsx","components/MoviesList/MovieItem/StylesdMovieListItem.js","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/StyledMovieList.js","components/MoviesList/MoviesList.jsx","refs/refs.js","components/api/api.js","components/SearchBox/StyledSearchBox.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledGoBackBtn = styled.button`\n  cursor: pointer;\n  text-decoration: none;\n  background: rgb(3, 37, 65);\n  font-size: 18px;\n  color: #369baf;\n  padding: 10px;\n  margin-top: 15px;\n  margin-left: 10px;\n  margin-bottom: 20px;\n  display: inline-flex;\n  border: 1px solid #369baf;\n  border-radius: 10px;\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1),\n    -webkit-transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.1); /* Измените масштаб по вашему усмотрению */\n    transition: transform 0.3s ease; /* Добавьте плавное переходное свойство */\n  }\n`;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { StyledGoBackBtn } from 'components/GoBackBtn/StyledGoBackBtn';\n\nconst GoBackBtn = () => {\n  const location = useLocation(); // Хук для получения объекта location из React Router\n  const navigate = useNavigate(); // Хук для навигации по маршрутам\n\n  // Функция для возврата на предыдущую страницу\n  const handleGoBack = () => {\n    if (location.state && location.state.from) {\n      navigate(location.state.from); // Возвращение на предыдущий маршрут\n    } else {\n      navigate('/'); // Возвращение на главную страницу по умолчанию\n    }\n  };\n\n  return (\n    <StyledGoBackBtn onClick={handleGoBack} className=\"backBtn\">\n      &#8617;\n    </StyledGoBackBtn>\n  );\n};\n\nexport default GoBackBtn;\n","import styled from 'styled-components';\n\nexport const StyledMovieListItem = styled.li`\n  padding: 20px;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px;\n\n  /* Стили для контейнера карточки */\n  .movieCard {\n    position: relative;\n    width: 260px;\n    height: 390px;\n    perspective: 1000px;\n    border-radius: 20px;\n  }\n\n  /* Стили для передней стороны */\n  .movieCardFront {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    backface-visibility: hidden;\n    transition: transform 1.2s ease; /* Увеличено время перехода */\n  }\n\n  /* Стили для обратной стороны */\n  .movieCardBack {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    backface-visibility: hidden;\n    transform: rotateY(180deg);\n    transition: transform 1.2s ease, opacity 1.2s ease; /* Увеличено время перехода */\n    background-color: #ffffff;\n    padding: 20px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  /* Показываем обратную сторону при наведении */\n  .movieCard:hover .movieCardFront {\n    transform: rotateY(180deg);\n  }\n\n  .movieCard:hover .movieCardBack {\n    transform: rotateY(0deg);\n    opacity: 1;\n    pointer-events: auto;\n    background-color: rgb(54, 155, 175);\n    color: white;\n    border-radius: 20px;\n  }\n\n  .moviePoster {\n    border-radius: 20px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { StyledMovieListItem } from 'components/MoviesList/MovieItem/StylesdMovieListItem';\n\nconst MovieItem = ({ id, poster_path, title, overview }) => {\n  const navigate = useNavigate();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleItemClick = () => {\n    navigate(`/movies/${id}`);\n  };\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <StyledMovieListItem\n      className={`movieItem ${isHovered ? 'hovered' : ''}`}\n      onClick={handleItemClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"movieCard\">\n        <div className={`movieCardFront ${isHovered ? 'hovered' : ''}`}>\n          <img\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n            alt={title}\n            className=\"moviePoster front\"\n          />\n        </div>\n        <div className={`movieCardBack ${isHovered ? 'hovered' : ''}`}>\n          <h3 className=\"front\">{title}</h3>\n          <p className=\"overviewText back\">{overview}</p>\n        </div>\n      </div>\n    </StyledMovieListItem>\n  );\n};\n\nexport default MovieItem;\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import React from 'react';\nimport MovieItem from 'components/MoviesList/MovieItem/MovieItem';\nimport { useNavigate } from 'react-router-dom';\nimport { StyledMovieList } from 'components/MoviesList/StyledMovieList';\n\n// Компонент для отображения списка фильмов\nconst MoviesList = ({ movies }) => {\n  // Хук навигации из React Router для перехода на другие страницы\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <StyledMovieList className=\"moviesList\">\n      {/* Проверка, что массив movies не является null или undefined */}\n      {movies &&\n        // Отображаем каждый элемент списка фильмов\n        movies.map(movie => (\n          <MovieItem\n            key={movie.id}\n            id={movie.id}\n            poster_path={movie.poster_path}\n            title={movie.title}\n            overview={movie.overview}\n            // Используем функцию для загрузки выбранного фильма при клике\n            onClick={() => handleMovieClick(movie.id)}\n          ></MovieItem>\n        ))}\n    </StyledMovieList>\n  );\n};\n\nexport default MoviesList;\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c23a5d8272617f6f7021ba4c498464ff';\n","import axios from 'axios'; //npm install axios\n\nimport { BASE_URL, API_KEY } from 'refs/refs';\n\nexport const getTrendingFilm = async () => {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getFilmById = async movieId => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = resp.data;\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport const getReviewMovie = async movieID => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`\n  );\n  const data = resp.data;\n  return data;\n};\n\nexport const getCastMovie = async movieID => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`\n  );\n  const data = resp.data;\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const StyledSearchBox = styled.div`\n  background-image: linear-gradient(\n      to right,\n      rgba(3, 37, 65, 0.8) 0%,\n      rgba(3, 37, 65, 0) 100%\n    ),\n    url('https://www.themoviedb.org/t/p/w1920_and_h600_multi_faces_filter(duotone,00192f,00baff)/dKqa850uvbNSCaQCV4Im1XlzEtQ.jpg');\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-color: rgb(3, 37, 65);\n\n  padding-top: 40px;\n  padding-bottom: 40px;\n\n  .welcomeTitle {\n    padding: 15px;\n    margin: 0;\n    margin-bottom: 10px;\n    font-size: 48px;\n    font-weight: 700;\n    line-height: 1;\n  }\n  .welcomeText {\n    padding: 15px;\n\n    margin: 0;\n    margin-bottom: 10px;\n    font-size: 32px;\n    font-weight: 700;\n    line-height: 1;\n  }\n  .searchContainer {\n    position: relative;\n    display: inline-block;\n    width: 500px;\n  }\n\n  input[type='text'] {\n    margin-top: 15px;\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-bottom: 20px;\n\n    width: 100%;\n    padding: 10px;\n\n    background: white;\n    font-size: 18px;\n    color: rgb(3, 37, 65);\n\n    border: 2px solid rgb(3, 37, 65);\n    border-radius: 40px;\n  }\n\n  .submitBtn {\n    position: absolute;\n    top: 47%;\n    right: -33px;\n    transform: translateY(-50%);\n\n    cursor: pointer;\n    text-decoration: none;\n    background: rgb(54, 155, 175);\n    font-size: 18px;\n    color: white;\n    padding: 10px;\n\n    display: inline-flex;\n    border: 1px solid rgb(54, 155, 175);\n    border-radius: 40px;\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),\n      box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1),\n      -webkit-transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .submitBtn :hover,\n  .submitBtn :focus {\n    transform: scale(1.1); /* Измените масштаб по вашему усмотрению */\n    transition: transform 0.3s ease; /* Добавьте плавное переходное свойство */\n  }\n\n  .buttonLabel {\n    color: white;\n  }\n`;\n","import React from 'react';\nimport { StyledSearchBox } from 'components/SearchBox/StyledSearchBox';\n\nconst SearchBox = ({ onSearch, inputValue, setInputValue }) => {\n  // Обработчик изменения значения инпута\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Обработчик отправки формы\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!inputValue) {\n      alert('Please, enter film name');\n    }\n    // Вызываем функцию onSearch из родительского компонента для выполнения поиска\n    console.log('inputValue', inputValue);\n    onSearch(inputValue);\n  };\n\n  return (\n    <StyledSearchBox>\n      <h2 className=\"welcomeTitle\"> Welcome.</h2>\n      <h3 className=\"welcomeText\">\n        Millions of movies, series, and people. Explore now.\n      </h3>\n      <div className=\"searchContainer\">\n        <form className=\"searchForm\" onSubmit={handleSubmit}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"search by film name\"\n            value={inputValue}\n            // Обновляем состояние при изменении значения инпута\n            onChange={handleInputChange}\n          />\n          <button type=\"submit\" className=\"submitBtn\">\n            <span className=\"buttonLabel\"> Search</span>\n          </button>\n        </form>\n      </div>\n    </StyledSearchBox>\n  );\n};\n\nexport default SearchBox;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'components/api/api.js'; // Используем функцию получения списка фильмов\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport Loader from 'components/Loader/Loader';\nimport GoBackBtn from 'components/GoBackBtn/GoBackBtn';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false); // Состояние для отслеживания загрузки данных\n  const [error, setError] = useState(null); // Состояние для отслеживания ошибок\n  const [inputValue, setInputValue] = useState(''); // Состояние для хранения значения ввода поиска\n  const [movies, setMovies] = useState(null); // Состояние для хранения списка фильмов\n  const navigate = useNavigate(); // Хук для навигации по маршрутам\n  const [searchParams, setSearchParams] = useSearchParams(); // Хук для работы с параметрами строки запроса\n  const query = searchParams.get('query'); // Получаем значение параметра 'query'\n\n  // Функция для получения списка фильмов по поисковому запросу\n  const fetchMoviesBySearchQuery = async (queryValue, currentPage) => {\n    try {\n      setIsLoading(true); // Устанавливаем флаг загрузки в true перед запросом\n      setError(null); // Сбрасываем состояние ошибки перед запросом\n\n      const data = await getSearchMovie(queryValue); // Используем новую функцию getSearchMovie для запроса\n      console.log('Получены данные:', data);\n      setMovies(data.results); // Устанавливаем полученный список фильмов в состояние\n      setError(null); // Сбрасываем состояние ошибки\n    } catch (error) {\n      setError(error.message); // Устанавливаем сообщение об ошибке в состояние\n      setMovies(null); // Сбрасываем список фильмов в случае ошибки\n    } finally {\n      setIsLoading(false); // Устанавливаем флаг загрузки в false после завершения запроса\n    }\n  };\n\n  // useEffect для обработки изменения параметра запроса 'query'\n  useEffect(() => {\n    if (query) {\n      setInputValue(query); // Устанавливаем значение из параметра запроса в состояние ввода\n      fetchMoviesBySearchQuery(query, 1); // Вызов функции для получения фильмов при изменении запроса\n    }\n  }, [query]);\n\n  // Функция для обработки отправки поискового запроса\n  const handleSubmit = value => {\n    if (!value) return; // Если значение пустое, прекращаем выполнение\n\n    setInputValue(value); // Устанавливаем значение поискового запроса в состояние ввода\n    setSearchParams({ query: value }); // Записываем слово для поиска в параметры строки запроса\n\n    fetchMoviesBySearchQuery(value, 1); // Вызов функции для получения фильмов по запросу\n  };\n\n  // Функция для обработки нажатия на фильм и навигации к его странице\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`); // Переход на страницу фильма с указанным movieId\n  };\n\n  return (\n    <>\n      {/* Отображение сообщения об ошибке, если произошла ошибка */}\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... Error message: {error}\n        </p>\n      )}\n\n      {/* Отображение индикатора загрузки, если данные загружаются */}\n      {isLoading && <Loader />}\n\n      {/* Кнопка для возврата на предыдущую страницу */}\n      <GoBackBtn />\n\n      {/* Компонент SearchBox для ввода поискового запроса */}\n      <SearchBox\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        onSearch={handleSubmit}\n      />\n\n      {/* Отображение списка фильмов, если он не пуст и содержит более одного фильма */}\n      {movies && movies.length > 0 && (\n        <MoviesList movies={movies} onClick={handleMovieClick} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledGoBackBtn","styled","_templateObject","_taggedTemplateLiteral","location","useLocation","navigate","useNavigate","_jsx","onClick","state","from","className","children","StyledMovieListItem","_ref","id","poster_path","title","overview","_useState","useState","_useState2","_slicedToArray","isHovered","setIsHovered","concat","onMouseEnter","onMouseLeave","_jsxs","src","alt","StyledMovieList","movies","map","movie","MovieItem","movieId","BASE_URL","API_KEY","getTrendingFilm","_asyncToGenerator","_regeneratorRuntime","_callee","resp","data","_context","prev","next","axios","sent","abrupt","stop","apply","arguments","getFilmById","_ref2","_callee2","_context2","t0","_x","getSearchMovie","_ref3","_callee3","searchQuery","_context3","_x2","getReviewMovie","_ref4","_callee4","movieID","_context4","_x3","getCastMovie","_ref5","_callee5","_context5","_x4","StyledSearchBox","onSearch","inputValue","setInputValue","onSubmit","event","preventDefault","alert","console","log","type","autoComplete","autoFocus","placeholder","value","onChange","target","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","_useState7","_useState8","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","fetchMoviesBySearchQuery","queryValue","currentPage","results","message","finish","useEffect","_Fragment","Loader","GoBackBtn","SearchBox","length","MoviesList"],"sourceRoot":""}