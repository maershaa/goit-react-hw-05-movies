{"version":3,"file":"static/js/983.69aa4176.chunk.js","mappings":"qMACaA,E,OAAsBC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8L,SC6B5C,EA1BkB,SAAHC,GAAuD,IAAjDC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SACrCC,GADsDL,EAAPM,SACpCC,EAAAA,EAAAA,OAOjB,OAEEC,EAAAA,EAAAA,MAACZ,EAAmB,CAACa,UAAU,YAAYH,QAPrB,WAEtBD,EAAS,WAADK,OAAYT,GACtB,EAIsEU,SAAA,EAElEC,EAAAA,EAAAA,KAAA,OACEC,IAAG,sCAAAH,OAAwCR,GAC3CY,IAAKX,EACLY,MAAO,CAAEC,OAAQ,YAGnBR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeE,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKR,KACLS,EAAAA,EAAAA,KAAA,KAAGH,UAAU,eAAcE,SAAEP,SAIrC,ECIA,EA3BmB,SAAHJ,GAAoB,IAAdiB,EAAMjB,EAANiB,OAEdZ,GAAWE,EAAAA,EAAAA,MAKjB,OACEK,EAAAA,EAAAA,KAAA,MAAIH,UAAU,aAAYE,SAEvBM,GAECA,EAAOC,KAAI,SAAAC,GAAK,OACdP,EAAAA,EAAAA,KAACQ,EAAS,CAERnB,GAAIkB,EAAMlB,GACVC,YAAaiB,EAAMjB,YACnBC,MAAOgB,EAAMhB,MACbC,SAAUe,EAAMf,SAEhBE,QAAS,kBAjBMe,EAiBiBF,EAAMlB,QAhB9CI,EAAS,WAADK,OAAYW,IADG,IAAAA,CAiB0B,GANpCF,EAAMlB,GAOA,KAIvB,C,8DC5BMqB,EAAW,gCACXC,EAAU,mCAEVC,EAAW,eAAAxB,GAAAyB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAc,OAAZN,EAAOE,EAAAK,OAAA,QAAAC,IAAAN,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEtBG,EAAAA,EAAAA,IAAU,GAAD5B,OAC3BY,GAAQZ,OAAGkB,EAAQ,aAAAlB,OAAYa,GAClCM,GACA,KAAD,EACwC,OAJnCC,EAAQG,EAAAM,KAIdC,QAAQC,IAAI,kBAAmBX,GAAUG,EAAAS,OAAA,SAClCZ,EAASa,MAAI,aAAAV,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAAAA,EAAAW,GAAC,KAAD,oBAAAX,EAAAY,OAAA,GAAAlB,EAAA,kBAIvB,gBAXgBmB,GAAA,OAAA9C,EAAA+C,MAAA,KAAAf,UAAA,KAajB,K,2HC4CA,UAxDiB,WACf,IAAAgB,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAGtBG,GAA4BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCzC,EAAM0C,EAAA,GAAEC,EAASD,EAAA,GAElBtD,GAAWE,EAAAA,EAAAA,MAUXsD,EAAiB,eAAA7D,GAAAyB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMmC,GAAG,IAAAnB,EAAAoB,EAAA,OAAArC,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGf,OAHeF,EAAAC,KAAA,EAE/BmB,GAAa,GACbI,EAAS,MAAOxB,EAAAE,KAAA,GAEGX,EAAAA,EAAAA,GAAY,qBAAqB,KAAD,EAA7CmB,EAAIV,EAAAM,KAEJtB,EAAS0B,EAAKqB,QAEpBJ,EAAU3C,GACVwC,EAAS,MAAOxB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEhBwB,EAASxB,EAAAW,GAAMqB,SACfL,EAAU,MAAO,QAEI,OAFJ3B,EAAAC,KAAA,GAEjBmB,GAAa,GAAQpB,EAAAiC,OAAA,6BAAAjC,EAAAY,OAAA,GAAAlB,EAAA,yBAExB,gBAjBsBmB,GAAA,OAAA9C,EAAA+C,MAAA,KAAAf,UAAA,KAuBvB,OAJAmC,EAAAA,EAAAA,YAAU,WACRN,GACF,GAAG,KAGDrD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACa,OAAV6C,IACChD,EAAAA,EAAAA,MAAA,KAAGC,UAAU,aAAYE,SAAA,CAAC,+CACqB6C,KAIhDJ,IAAaxC,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,KAErBxD,EAAAA,EAAAA,KAAA,MAAIH,UAAU,YAAWE,SAAC,sBAC1BC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACpD,OAAQA,EAAQX,QA3CP,SAAAe,GACvBhB,EAAS,WAADK,OAAYW,GACtB,MA4CF,C","sources":["components/MoviesList/MovieItem/StylesdMovieListItem.js","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/api/api.js","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components'; //npm install styled-components\nexport const StyledMovieListItem = styled.li`\n  padding: 20px;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n\n  .itemContainer {\n    max-width: 50%;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n`;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Импортируем useNavigate\nimport { StyledMovieListItem } from 'components/MoviesList/MovieItem/StylesdMovieListItem';\n\nconst MovieItem = ({ id, poster_path, title, overview, onClick }) => {\n  const navigate = useNavigate(); // Инициализируем useNavigate\n\n  const handleItemClick = () => {\n    // При нажатии на элемент списка фильмов, перенаправляем пользователя на страницу с деталями фильма\n    navigate(`/movies/${id}`);\n  };\n\n  return (\n    // Используем стилизованный компонент для элемента списка фильма\n    <StyledMovieListItem className=\"movieItem\" onClick={handleItemClick}>\n      {/* Отображаем постер фильма */}\n      <img\n        src={`https://image.tmdb.org/t/p/original${poster_path}`}\n        alt={title}\n        style={{ height: '260px' }}\n      />\n      {/* Контейнер для заголовка и описания фильма */}\n      <div className=\"itemContainer\">\n        <h3>{title}</h3>\n        <p className=\"overviewText\">{overview}</p>\n      </div>\n    </StyledMovieListItem>\n  );\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport MovieItem from 'components/MoviesList/MovieItem/MovieItem';\nimport { useNavigate } from 'react-router-dom';\n\n// Компонент для отображения списка фильмов\nconst MoviesList = ({ movies }) => {\n  // Хук навигации из React Router для перехода на другие страницы\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <ul className=\"moviesList\">\n      {/* Проверка, что массив movies не является null или undefined */}\n      {movies &&\n        // Отображаем каждый элемент списка фильмов\n        movies.map(movie => (\n          <MovieItem\n            key={movie.id}\n            id={movie.id}\n            poster_path={movie.poster_path}\n            title={movie.title}\n            overview={movie.overview}\n            // Используем функцию для загрузки выбранного фильма при клике\n            onClick={() => handleMovieClick(movie.id)}\n          ></MovieItem>\n        ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios'; //npm install axios\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c23a5d8272617f6f7021ba4c498464ff';\n\nconst fetchMovies = async (endpoint, options = {}) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${endpoint}?api_key=${API_KEY}`,\n      options\n    );\n    console.log('response in api', response);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default fetchMovies;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport fetchMovies from 'components/api/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader'; //npm install react-loader-spinner --save\n\nconst HomePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const [inputValue, setInputValue] = useState('');\n  // const [currentPage, setCurrentPage] = useState(1);\n  const [movies, setMovies] = useState(null); // Состояние для хранения\n\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  //  const getMovieById = productId => {\n  //    return products.find(product => product.id === productId);\n  //  };\n\n  // Функция для выполнения запроса\n  const fetchAndSetMovies = async url => {\n    try {\n      setIsLoading(true); // Устанавливаем флаг загрузки в true\n      setError(null); // Сбрасываем сообщение об ошибке\n\n      const data = await fetchMovies('trending/all/week'); // Выполняем запрос к API\n\n      const movies = data.results; // Получаем новые фильмы\n\n      setMovies(movies); // Устанавливаем обновленные фильмы\n      setError(null); // Сбрасываем сообщение об ошибке\n    } catch (error) {\n      setError(error.message); // Устанавливаем сообщение об ошибке\n      setMovies(null); // Сбрасываем фильмы в случае ошибки\n    } finally {\n      setIsLoading(false); // В любом случае завершаем запрос, сбрасывая флаг загрузки\n    }\n  };\n\n  useEffect(() => {\n    fetchAndSetMovies();\n  }, []);\n\n  return (\n    <div>\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... Error message: {error}\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n\n      <h2 className=\"pageTitle\"> Trending today </h2>\n      <MoviesList movies={movies} onClick={handleMovieClick} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["StyledMovieListItem","styled","_templateObject","_taggedTemplateLiteral","_ref","id","poster_path","title","overview","navigate","onClick","useNavigate","_jsxs","className","concat","children","_jsx","src","alt","style","height","movies","map","movie","MovieItem","movieId","BASE_URL","API_KEY","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","options","response","_args","arguments","_context","prev","next","length","undefined","axios","sent","console","log","abrupt","data","t0","stop","_x","apply","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setMovies","fetchAndSetMovies","url","_movies","results","message","finish","useEffect","Loader","MoviesList"],"sourceRoot":""}