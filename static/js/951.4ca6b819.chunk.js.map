{"version":3,"file":"static/js/951.4ca6b819.chunk.js","mappings":"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","sources":["components/MoviesList/MovieItem/StylesdMovieListItem.js","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/StyledMovieList.js","components/MoviesList/MoviesList.jsx","components/api/getTrendingFilm.js","pages/HomePage.jsx","refs/refs.js"],"sourcesContent":["import styled from 'styled-components'; //npm install styled-components\nexport const StyledMovieListItem = styled.li`\n  padding: 20px;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px;\n\n  /* Стили для контейнера карточки */\n  .movieCard {\n    position: relative;\n    width: 260px;\n    height: 390px;\n    perspective: 1000px;\n    border-radius: 20px;\n  }\n\n  /* Стили для передней стороны */\n  .movieCardFront {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    backface-visibility: hidden;\n    transition: transform 0.8s ease;\n  }\n\n  /* Стили для обратной стороны */\n  .movieCardBack {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    backface-visibility: hidden;\n    transform: rotateY(180deg);\n    transition: transform 0.8s ease;\n    background-color: #ffffff;\n    padding: 20px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n    display: none;\n  }\n\n  /* Показываем обратную сторону при наведении */\n  .movieCard:hover .movieCardFront {\n    transform: rotateY(180deg);\n  }\n\n  .movieCard:hover .movieCardBack {\n    transform: rotateY(0deg);\n    display: block;\n\n    background-color: rgb(54, 155, 175);\n    color: white;\n\n    border-radius: 20px;\n  }\n\n  .moviePoster {\n    border-radius: 20px;\n  }\n\n  .movieCardFront,\n  .movieCardBack {\n    transition-duration: 0.8s; /* Увеличьте или уменьшите продолжительность по вашему усмотрению */\n    transition-timing-function: ease-in-out; /* Измените функцию сглаживания по вашему выбору */\n  }\n`;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { StyledMovieListItem } from 'components/MoviesList/MovieItem/StylesdMovieListItem';\n\nconst MovieItem = ({ id, poster_path, title, overview }) => {\n  const navigate = useNavigate();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleItemClick = () => {\n    navigate(`/movies/${id}`);\n  };\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <StyledMovieListItem\n      className={`movieItem ${isHovered ? 'hovered' : ''}`}\n      onClick={handleItemClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"movieCard\">\n        <div className={`movieCardFront ${isHovered ? 'hovered' : ''}`}>\n          <img\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n            alt={title}\n            className=\"moviePoster front\"\n          />\n          <div className=\"itemContainer\">\n            <h3 className=\"front\">{title}</h3>\n          </div>\n        </div>\n        <div className={`movieCardBack ${isHovered ? 'hovered' : ''}`}>\n          <h3 className=\"front\">{title}</h3>\n\n          <p className=\"overviewText back\">{overview}</p>\n        </div>\n      </div>\n    </StyledMovieListItem>\n  );\n};\n\nexport default MovieItem;\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import React from 'react';\nimport MovieItem from 'components/MoviesList/MovieItem/MovieItem';\nimport { useNavigate } from 'react-router-dom';\nimport { StyledMovieList } from 'components/MoviesList/StyledMovieList';\n\n// Компонент для отображения списка фильмов\nconst MoviesList = ({ movies }) => {\n  // Хук навигации из React Router для перехода на другие страницы\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <StyledMovieList className=\"moviesList\">\n      {/* Проверка, что массив movies не является null или undefined */}\n      {movies &&\n        // Отображаем каждый элемент списка фильмов\n        movies.map(movie => (\n          <MovieItem\n            key={movie.id}\n            id={movie.id}\n            poster_path={movie.poster_path}\n            title={movie.title}\n            overview={movie.overview}\n            // Используем функцию для загрузки выбранного фильма при клике\n            onClick={() => handleMovieClick(movie.id)}\n          ></MovieItem>\n        ))}\n    </StyledMovieList>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios'; //npm install axios\n\nimport { BASE_URL, API_KEY } from 'refs/refs';\n\nconst getTrendingFilm = async () => {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport default getTrendingFilm;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader'; //npm install react-loader-spinner --save\nimport getTrendingFilm from 'components/api/getTrendingFilm';\n\nconst HomePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const [inputValue, setInputValue] = useState('');\n  // const [currentPage, setCurrentPage] = useState(1);\n  const [movies, setMovies] = useState(null); // Состояние для хранения\n\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  // Функция для выполнения запроса\n  const fetchAndSetMovies = async () => {\n    try {\n      setIsLoading(true); // Устанавливаем флаг загрузки в true\n      setError(null); // Сбрасываем сообщение об ошибке\n\n      const data = await getTrendingFilm(); // Вызываем функцию getTrendingFilm\n\n      const movies = data.results; // Получаем новые фильмы\n\n      setMovies(movies); // Устанавливаем обновленные фильмы\n      setError(null); // Сбрасываем сообщение об ошибке\n    } catch (error) {\n      setError(error.message); // Устанавливаем сообщение об ошибке\n      setMovies(null); // Сбрасываем фильмы в случае ошибки\n    } finally {\n      setIsLoading(false); // В любом случае завершаем запрос, сбрасывая флаг загрузки\n    }\n  };\n\n  useEffect(() => {\n    fetchAndSetMovies();\n  }, []);\n\n  return (\n    <div>\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... Error message: {error}\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n\n      <h2 className=\"pageTitle\"> Trending today </h2>\n      <MoviesList movies={movies} onClick={handleMovieClick} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c23a5d8272617f6f7021ba4c498464ff';\n"],"names":["StyledMovieListItem","styled","_templateObject","_taggedTemplateLiteral","_ref","id","poster_path","title","overview","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isHovered","setIsHovered","_jsx","className","concat","onClick","onMouseEnter","onMouseLeave","children","_jsxs","src","alt","StyledMovieList","movies","map","movie","MovieItem","movieId","getTrendingFilm","_asyncToGenerator","_regeneratorRuntime","_callee","resp","data","_context","prev","next","axios","BASE_URL","API_KEY","sent","abrupt","stop","apply","arguments","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setMovies","fetchAndSetMovies","_movies","results","t0","message","finish","useEffect","Loader","MoviesList"],"sourceRoot":""}