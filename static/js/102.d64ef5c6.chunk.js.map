{"version":3,"file":"static/js/102.d64ef5c6.chunk.js","mappings":"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","sources":["components/ReviewsList/ReviewsListItem/StyledReviewsListItem.js","components/ReviewsList/ReviewsListItem/ReviewsListItem.jsx","components/ReviewsList/StyledReviewsList.js","components/ReviewsList/ReviewsList.jsx","components/api/getReviewMovie.js","pages/Reviews.jsx","refs/refs.js"],"sourcesContent":["import styled from 'styled-components'; //npm install styled-components\nexport const StyledReviewsListItem = styled.li`\n  width: 50%;\n  background-color: rgb(36, 100, 152);\n\n  padding: 10px;\n  margin: 10px 4px 10px 10px;\n\n  border: 1px solid grey;\n  padding-bottom: 10px;\n  border-radius: 10px;\n\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n","import React from 'react';\nimport { StyledReviewsListItem } from 'components/ReviewsList/ReviewsListItem/StyledReviewsListItem.js';\n\nconst ReviewsListItem = ({ userName, rating, content, date }) => {\n  return (\n    <StyledReviewsListItem>\n      <h3>@{userName}</h3>\n      <p> Rating:{rating}</p>\n      <p className=\"content\">{content}</p>\n      <p>{new Date(date).toLocaleString()}</p>\n    </StyledReviewsListItem>\n  );\n};\n\nexport default ReviewsListItem;\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledReviewsList = styled.ul`\n  list-style: none;\n\n  padding-bottom: 0;\n\n  gap: 10px;\n\n  .content {\n    font-style: italic;\n  }\n`;\n","import React from 'react';\nimport ReviewsListItem from 'components/ReviewsList//ReviewsListItem/ReviewsListItem';\nimport { StyledReviewsList } from 'components/ReviewsList/StyledReviewsList';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <StyledReviewsList>\n      {reviews.map(review => (\n        <ReviewsListItem\n          key={review.id}\n          userName={review.author}\n          rating={review.author_details.rating}\n          content={review.content}\n          date={review.created_at}\n        ></ReviewsListItem>\n      ))}\n    </StyledReviewsList>\n  );\n};\n\nexport default ReviewsList;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'refs/refs';\n\nconst getReviewMovie = async movieID => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`\n  );\n  const data = resp.data;\n  return data;\n};\n\nexport default getReviewMovie;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport Loader from 'components/Loader/Loader'; //npm install react-loader-spinner --save\nimport getReviewMovie from 'components/api/getReviewMovie';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  // Состояние для отслеживания состояния загрузки\n  const [isLoading, setIsLoading] = useState(false);\n  // Состояние для обработки ошибок\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState(null);\n\n  const fetchReviews = async (movieId, currentPage) => {\n    try {\n      // Установить флаг загрузки в true перед запросом\n      setIsLoading(true);\n      // Сбросить состояние ошибки перед запросом\n      setError(null);\n      // Запрос к API для получения детальной информации о фильме по его ID\n      const data = await getReviewMovie(movieId);\n      // Установка детальной информации о фильме в состояние\n      setReviews(data);\n      console.log('fetchReviews', data);\n      // Сбросить состояние ошибки\n      setError(null);\n    } catch (error) {\n      // Установка состояния ошибки в случае ошибки\n      setError(error.message);\n      // Сбросить состояние деталей фильма в случае ошибки\n      setReviews(null);\n    } finally {\n      // Установка флага загрузки в false в любом случае после завершения запроса, независимо от его успешности\n      setIsLoading(false);\n    }\n  };\n  // useEffect для выполнения запроса, когда компонент монтируется или изменяется movieId\n  useEffect(() => {\n    // Вызов функции fetchChosenMovie при изменении movieId\n    fetchReviews(movieId, 1);\n  }, [movieId]);\n\n  return (\n    <div>\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... Error message: {error}\n        </p>\n      )}\n      {isLoading && <Loader />}\n\n      <h2> Reviews </h2>\n\n      {reviews !== null && <ReviewsList reviews={reviews.results} />}\n    </div>\n  );\n};\n\nexport default Reviews;\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c23a5d8272617f6f7021ba4c498464ff';\n"],"names":["StyledReviewsListItem","styled","_templateObject","_taggedTemplateLiteral","_ref","userName","rating","content","date","_jsxs","children","_jsx","className","Date","toLocaleString","StyledReviewsList","reviews","map","review","ReviewsListItem","author","author_details","created_at","id","getReviewMovie","_asyncToGenerator","_regeneratorRuntime","_callee","movieID","resp","data","_context","prev","next","axios","concat","BASE_URL","API_KEY","sent","abrupt","stop","_x","apply","arguments","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setReviews","fetchReviews","currentPage","console","log","t0","message","finish","_x2","useEffect","Loader","ReviewsList","results"],"sourceRoot":""}