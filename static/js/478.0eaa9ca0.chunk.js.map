{"version":3,"file":"static/js/478.0eaa9ca0.chunk.js","mappings":"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","sources":["components/api/api.js","components/ReviewsList/ReviewsListItem/StyledReviewsListItem.js","components/ReviewsList/ReviewsListItem/ReviewsListItem.jsx","components/ReviewsList/StyledReviewsList.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios'; //npm install axios\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c23a5d8272617f6f7021ba4c498464ff';\n\nconst fetchMovies = async (endpoint, options = {}) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${endpoint}?api_key=${API_KEY}`,\n      options\n    );\n    console.log('response in api', response);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default fetchMovies;\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledReviewsListItem = styled.li`\n  width: 50%;\n  background-color: rgb(36, 100, 152);\n\n  padding: 10px;\n  margin: 10px 4px 10px 10px;\n\n  border: 1px solid grey;\n  padding-bottom: 10px;\n  border-radius: 10px;\n\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n","import React from 'react';\nimport { StyledReviewsListItem } from 'components/ReviewsList/ReviewsListItem/StyledReviewsListItem.js';\n\nconst ReviewsListItem = ({ userName, rating, content, date }) => {\n  return (\n    <StyledReviewsListItem>\n      <h3>@{userName}</h3>\n      <p> Rating:{rating}</p>\n      <p className=\"content\">{content}</p>\n      <p>{new Date(date).toLocaleString()}</p>\n    </StyledReviewsListItem>\n  );\n};\n\nexport default ReviewsListItem;\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledReviewsList = styled.ul`\n  list-style: none;\n\n  padding-bottom: 0;\n\n  gap: 10px;\n\n  .content {\n    font-style: italic;\n  }\n`;\n","import React from 'react';\nimport ReviewsListItem from 'components/ReviewsList//ReviewsListItem/ReviewsListItem';\nimport { StyledReviewsList } from 'components/ReviewsList/StyledReviewsList';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <StyledReviewsList>\n      {reviews.map(review => (\n        <ReviewsListItem\n          key={review.id}\n          userName={review.author}\n          rating={review.author_details.rating}\n          content={review.content}\n          date={review.created_at}\n        ></ReviewsListItem>\n      ))}\n    </StyledReviewsList>\n  );\n};\n\nexport default ReviewsList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport Loader from 'components/Loader/Loader'; //npm install react-loader-spinner --save\nimport fetchMovies from 'components/api/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  // Состояние для отслеживания состояния загрузки\n  const [isLoading, setIsLoading] = useState(false);\n  // Состояние для обработки ошибок\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState(null);\n\n  const fetchReviews = async (id, currentPage) => {\n    try {\n      // Установить флаг загрузки в true перед запросом\n      setIsLoading(true);\n      // Сбросить состояние ошибки перед запросом\n      setError(null);\n      // Запрос к API для получения детальной информации о фильме по его ID\n      const data = await fetchMovies(`movie/${id}/reviews`, {\n        language: 'en-US',\n        page: currentPage,\n      });\n      // fetch('https://api.themoviedb.org/3/movie/872585/reviews?language=en-US&page=1', options)\n\n      // Установка детальной информации о фильме в состояние\n      setReviews(data);\n      console.log('fetchReviews', data);\n      // Сбросить состояние ошибки\n      setError(null);\n    } catch (error) {\n      // Установка состояния ошибки в случае ошибки\n      setError(error.message);\n      // Сбросить состояние деталей фильма в случае ошибки\n      setReviews(null);\n    } finally {\n      // Установка флага загрузки в false в любом случае после завершения запроса, независимо от его успешности\n      setIsLoading(false);\n    }\n  };\n  // useEffect для выполнения запроса, когда компонент монтируется или изменяется movieId\n  useEffect(() => {\n    // Вызов функции fetchChosenMovie при изменении movieId\n    fetchReviews(movieId, 1);\n  }, [movieId]);\n\n  return (\n    <div>\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... Error message: {error}\n        </p>\n      )}\n      {isLoading && <Loader />}\n\n      <h2> Reviews </h2>\n\n      {reviews !== null && <ReviewsList reviews={reviews.results} />}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","options","response","_args","arguments","_context","prev","next","length","undefined","axios","concat","sent","console","log","abrupt","data","t0","stop","_x","apply","StyledReviewsListItem","styled","_templateObject","_taggedTemplateLiteral","userName","rating","content","date","_jsxs","children","_jsx","className","Date","toLocaleString","StyledReviewsList","reviews","map","review","ReviewsListItem","author","author_details","created_at","id","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setReviews","fetchReviews","currentPage","language","page","message","finish","_x2","useEffect","Loader","ReviewsList","results"],"sourceRoot":""}