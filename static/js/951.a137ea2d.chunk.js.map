{"version":3,"file":"static/js/951.a137ea2d.chunk.js","mappings":"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","sources":["components/MoviesList/MovieItem/StylesdMovieListItem.js","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/StyledMovieList.js","components/MoviesList/MoviesList.jsx","components/api/getTrendingFilm.js","pages/HomePage.jsx","refs/refs.js"],"sourcesContent":["import styled from 'styled-components'; //npm install styled-components\nexport const StyledMovieListItem = styled.li`\n  padding: 20px;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n\n  .itemContainer {\n    max-width: 50%;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  .moviePoster {\n    border-radius: 10px;\n  }\n`;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Импортируем useNavigate\nimport { StyledMovieListItem } from 'components/MoviesList/MovieItem/StylesdMovieListItem';\n\nconst MovieItem = ({ id, poster_path, title, overview, onClick }) => {\n  const navigate = useNavigate(); // Инициализируем useNavigate\n\n  const handleItemClick = () => {\n    // При нажатии на элемент списка фильмов, перенаправляем пользователя на страницу с деталями фильма\n    navigate(`/movies/${id}`);\n  };\n\n  return (\n    // Используем стилизованный компонент для элемента списка фильма\n    <StyledMovieListItem className=\"movieItem\" onClick={handleItemClick}>\n      {/* Отображаем постер фильма */}\n      <img\n        src={`https://image.tmdb.org/t/p/original${poster_path}`}\n        alt={title}\n        style={{ height: '260px' }}\n        className=\"moviePoster\"\n      />\n      {/* Контейнер для заголовка и описания фильма */}\n      <div className=\"itemContainer\">\n        <h3>{title}</h3>\n        <p className=\"overviewText\">{overview}</p>\n      </div>\n    </StyledMovieListItem>\n  );\n};\n\nexport default MovieItem;\n","import styled from 'styled-components'; //npm install styled-components\nexport const StyledMovieList = styled.ul``;\n","import React from 'react';\nimport MovieItem from 'components/MoviesList/MovieItem/MovieItem';\nimport { useNavigate } from 'react-router-dom';\nimport { StyledMovieList } from 'components/MoviesList/StyledMovieList';\n\n// Компонент для отображения списка фильмов\nconst MoviesList = ({ movies }) => {\n  // Хук навигации из React Router для перехода на другие страницы\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <StyledMovieList className=\"moviesList\">\n      {/* Проверка, что массив movies не является null или undefined */}\n      {movies &&\n        // Отображаем каждый элемент списка фильмов\n        movies.map(movie => (\n          <MovieItem\n            key={movie.id}\n            id={movie.id}\n            poster_path={movie.poster_path}\n            title={movie.title}\n            overview={movie.overview}\n            // Используем функцию для загрузки выбранного фильма при клике\n            onClick={() => handleMovieClick(movie.id)}\n          ></MovieItem>\n        ))}\n    </StyledMovieList>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios'; //npm install axios\n\nimport { BASE_URL, API_KEY } from 'refs/refs';\n\nconst getTrendingFilm = async () => {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  const data = resp.data;\n\n  return data;\n};\n\nexport default getTrendingFilm;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader'; //npm install react-loader-spinner --save\nimport getTrendingFilm from 'components/api/getTrendingFilm';\n\nconst HomePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const [inputValue, setInputValue] = useState('');\n  // const [currentPage, setCurrentPage] = useState(1);\n  const [movies, setMovies] = useState(null); // Состояние для хранения\n\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  // Функция для выполнения запроса\n  const fetchAndSetMovies = async () => {\n    try {\n      setIsLoading(true); // Устанавливаем флаг загрузки в true\n      setError(null); // Сбрасываем сообщение об ошибке\n\n      const data = await getTrendingFilm(); // Вызываем функцию getTrendingFilm\n\n      const movies = data.results; // Получаем новые фильмы\n\n      setMovies(movies); // Устанавливаем обновленные фильмы\n      setError(null); // Сбрасываем сообщение об ошибке\n    } catch (error) {\n      setError(error.message); // Устанавливаем сообщение об ошибке\n      setMovies(null); // Сбрасываем фильмы в случае ошибки\n    } finally {\n      setIsLoading(false); // В любом случае завершаем запрос, сбрасывая флаг загрузки\n    }\n  };\n\n  useEffect(() => {\n    fetchAndSetMovies();\n  }, []);\n\n  return (\n    <div>\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... Error message: {error}\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n\n      <h2 className=\"pageTitle\"> Trending today </h2>\n      <MoviesList movies={movies} onClick={handleMovieClick} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c23a5d8272617f6f7021ba4c498464ff';\n"],"names":["StyledMovieListItem","styled","_templateObject","_taggedTemplateLiteral","_ref","id","poster_path","title","overview","navigate","onClick","useNavigate","_jsxs","className","concat","children","_jsx","src","alt","style","height","StyledMovieList","movies","map","movie","MovieItem","movieId","getTrendingFilm","_asyncToGenerator","_regeneratorRuntime","_callee","resp","data","_context","prev","next","axios","BASE_URL","API_KEY","sent","abrupt","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setMovies","fetchAndSetMovies","_movies","results","t0","message","finish","useEffect","Loader","MoviesList"],"sourceRoot":""}